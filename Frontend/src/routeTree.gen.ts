/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthPredictionsRouteImport } from './routes/auth/predictions'
import { Route as AuthDashboardRouteImport } from './routes/auth/dashboard'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthPredictionsRoute = AuthPredictionsRouteImport.update({
  id: '/predictions',
  path: '/predictions',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthDashboardRoute = AuthDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/signup': typeof SignupRoute
  '/auth/dashboard': typeof AuthDashboardRoute
  '/auth/predictions': typeof AuthPredictionsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/signup': typeof SignupRoute
  '/auth/dashboard': typeof AuthDashboardRoute
  '/auth/predictions': typeof AuthPredictionsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/signup': typeof SignupRoute
  '/auth/dashboard': typeof AuthDashboardRoute
  '/auth/predictions': typeof AuthPredictionsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/auth' | '/signup' | '/auth/dashboard' | '/auth/predictions'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth' | '/signup' | '/auth/dashboard' | '/auth/predictions'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/signup'
    | '/auth/dashboard'
    | '/auth/predictions'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  SignupRoute: typeof SignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/predictions': {
      id: '/auth/predictions'
      path: '/predictions'
      fullPath: '/auth/predictions'
      preLoaderRoute: typeof AuthPredictionsRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/dashboard': {
      id: '/auth/dashboard'
      path: '/dashboard'
      fullPath: '/auth/dashboard'
      preLoaderRoute: typeof AuthDashboardRouteImport
      parentRoute: typeof AuthRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthDashboardRoute: typeof AuthDashboardRoute
  AuthPredictionsRoute: typeof AuthPredictionsRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthDashboardRoute: AuthDashboardRoute,
  AuthPredictionsRoute: AuthPredictionsRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  SignupRoute: SignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
